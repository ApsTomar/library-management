replicaCount: 1

metaData:
  name: management-svc-k8s
  label: library-management-svc-k8s

image:
  repository: apstomar
  imageName: library_management_service
  tag: latest
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

livelinessProbe:
  endpoint: /health
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5

env:
  port: 6002
  sqlDialect: mysql
  fluentHost: fluentd
  fluentPort: 24224
  pushGateway: monitor-prometheus-pushgateway:9091

service:
  type: NodePort
  port: 6002
  nodePort: 30602
  targetPort: 6002

secret:
  name: library-secret-k8s
  type: Opaque

ingress:
  enabled: false
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
#   cpu: 100m
#   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
